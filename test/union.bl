union Foo {
    x,y:Int
    z:String
}

def show(foo:Foo)
    $puts "$foo: .x=$(foo.x) .y=$(foo.y) .z=$(foo.z)"
    if x := foo.x
        $puts "It was an x: $x"
    elseif y := foo.y
        $puts "It was a y: $y"
    elseif z := foo.z
        $puts "It was a z: $z"

def doop()
    tmp := @Foo.z "hi"
    show(@Foo.x 5)
    show(@Foo.y 6)
    show(@Foo.z "Hello")

doop()

struct Struct {
    inner:union InnerUnion{
        int:Int,
        num:Num,
    },
}

foo := Struct{.inner = @InnerUnion.int 5}
$puts "$foo"
fail unless foo.inner.int == 5
fail unless foo.inner.num == nil
