union Foo {
    x,y:Int
    z:String
}

def show(foo:Foo)
    say "$foo: .x=$(foo.x) .y=$(foo.y) .z=$(foo.z)"
    if x := foo.x
        say "It was an x: $x"
    elseif y := foo.y
        say "It was a y: $y"
    elseif z := foo.z
        say "It was a z: $z"

def doop()
    tmp := Foo.z("hi")
    show(Foo.x(5))
    show(Foo.y(6))
    show(Foo.z("Hello"))

doop()

union InnerUnion{
    int:Int,
    num:Num,
}

struct Struct {
    inner:InnerUnion,
}

foo := Struct{.inner = InnerUnion.int(5)}
say "$foo"
fail unless foo.inner.int == 5
fail unless foo.inner.num == nil
