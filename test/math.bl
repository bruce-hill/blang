a := 3_000 // Underscores can separate chunks
b := 2
x := 3.5
y := 2e3 // Scientific notation
$puts("Addition: $a+$b=$(a+b) $x+$y=$(x+y)")
$puts("Subtraction: $a-$b=$(a-b) $x-$y=$(x-y)")
$puts("Multiplication: $a*$b=$(a*b) $x*$y=$(x*y)")
$puts("Division: $a/$b=$(a/b) $x/$y=$(x/y)")
$puts("Modulus: $a mod $b=$(a mod b) $x mod 1=$(x mod 1.)")
$puts("Negative num modulus: -$a mod $b=$(-a mod b) -$x mod 1=$(-x mod 1.)")
$puts("Negative modulus: $a mod -$b=$(a mod -b) $x mod -1=$(x mod -1.)")
$puts("Exponentiation: $a^$b=$(a^b) $x^2.5=$(x^2.5)")

f := 23.5
$puts("$f casts to int: $(f:Int)")
$puts("$f rounds to int: $($float_to_int(f):Int)")

i := 123
$puts("$i casts to float: $(i:Num)")
$puts("$f rounds to float: $($int_to_float(i):Num)")

def fast_inverse_sqrt(number:Num):Num
    threehalfs := 1.5
    x2 := number * 0.5
    y := number
    i := number:Int
    i = 0x5FE6EB50C7B537A9 - (i / 2) // what the fuck? 
    y = i:Num
    y *= (threehalfs - (x2 * y * y)) // 1st iteration
    y *= (threehalfs - (x2 * y * y)) // 2nd iteration, this can be removed
    y *= (threehalfs - (x2 * y * y)) // 3rd iteration, this can be removed
    return y

test := 16.
$puts("fast_inverse_sqrt($test) = $(fast_inverse_sqrt(test))")
