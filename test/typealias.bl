deftype Foo:Int
x := 5:Foo

deftype MyString:String
s := "Hello":MyString
say "$x $s"

deftype ShellCode:String

deftype BP:String
extern bl_string_replace(text:String, pat:BP, replacement:String):String
extern bl_string_append_string(a:String,b:String):String

def shell_escape(unsafe:String):String
    escaped := bl_string_replace(unsafe, %BP{`",\,$,`}, '\\@0')
    return "\"$escaped\""

def add(unsafe:String,sh:ShellCode):ShellCode
    return bl_string_append_string(shell_escape(unsafe), sh):ShellCode

def add(sh:ShellCode,unsafe:String):ShellCode
    return bl_string_append_string(sh, shell_escape(unsafe)):ShellCode

def add(sh1:ShellCode,sh2:ShellCode):ShellCode
    return bl_string_append_string(sh1, sh2):ShellCode

file := "`rm -rf \$HOME/xxxx`" 
cmd := %ShellCode[cp ] + file + %ShellCode[ /tmp]
say "> $cmd"
