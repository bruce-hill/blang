should_nil := yes
int := should_nil ? nil; 123
say "$int (Optional(Int) $(int ? "wasn't"; "was") nil)"
float := should_nil ? nil; 5.5
say "$float (Optional(Num) $(float ? "wasn't"; "was") nil)"

s := should_nil ? nil; "Not nil"
say "$s (Optional(String) $(s? "wasn't"; "was") nil)"
say(s or "Nah")

fn := should_nil ? nil; (s:String)-> say(s)
maybe_log := fn or (s:String)-> say("...")
maybe_log("Hello")

def maybe_str(s:String,nil_it:Bool)
    return nil if nil_it
    return s

say(maybe_str("hi", no) or "XXX")
foo:= maybe_str("hi", no)

boolnil:= nil:Bool?
boolyes:= yes:Bool?
boolno:= no:Bool?

t := "truthy"
f := "falsey"
say "OptionalBool truthiness: nil=$(boolnil?t;f) yes=$(boolyes?t;f) no=$(boolno?t;f)"
say "OptionalBool equality: nil==nil?$(boolnil==nil?yes;no) yes==nil?$(boolyes==nil?yes;no) no==nil?$(boolno==nil?yes;no)"
say "OptionalBool equality: nil==no?$(boolnil==no?yes;no) yes==nil?$(boolyes==no?yes;no) no==nil?$(boolno==no?yes;no)"
say "OptionalBool equality: nil==yes?$(boolnil==yes?yes;no) yes==yes?$(boolyes==yes?yes;no) no==yes?$(boolno==yes?yes;no)"

nums := [2,3,4]
say "nums: $nums"
say "nums[1] = $(nums[1]); nums[-234] = $(nums[-234]); nums[999] = $(nums[999])"
say "nums[nums[1]] = $(nums[nums[1]])"
say "nums[nums[999]] = $(nums[nums[999]])"

strs := ["A","B","C"]
say "strs: $strs"
say "strs[1] = $(strs[1]); strs[-234] = $(strs[-234]); strs[999] = $(strs[999])"
say "strs[nums[999]] = $(strs[nums[999]])"
